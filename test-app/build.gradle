import org.jetbrains.kotlin.gradle.plugin.mpp.KotlinNativeTarget
import org.jetbrains.kotlin.gradle.plugin.mpp.NativeBuildType
import org.jetbrains.kotlin.gradle.plugin.mpp.TestExecutable

import static org.gradle.language.base.plugins.LifecycleBasePlugin.VERIFICATION_GROUP

apply plugin: 'org.jetbrains.kotlin.multiplatform'
apply plugin: 'application'

kotlin {
	jvm {
		withJava() // For application plugin.
	}

	linuxArm64()
	linuxX64()

	macosArm64()
	macosX64()

	mingwX64()

	applyDefaultHierarchyTemplate {
		it.common {
			it.group("native") {
				it.group("posix") {
					it.group("linux") {}
					it.group("macos") {}
				}
			}
		}
	}

	sourceSets {
		commonMain {
			dependencies {
				implementation project(':')
			}
		}
		commonTest {
			dependencies {
				implementation libs.kotlin.test
				implementation libs.kotlinx.coroutines.test
				implementation libs.assertk
			}
		}
	}

	targets.withType(KotlinNativeTarget).configureEach { target ->
		target.binaries.executable {
			entryPoint = 'example.main'
			if (buildType == NativeBuildType.DEBUG) {
				linkTaskProvider.configure {
					enabled = false
				}
			}
		}
	}
}

// TODO We should be able to get this TaskProvider from Kotlin's TestExecutable above.
tasks.configureEach {
	if (it.name.endsWith("Test") && it.group == VERIFICATION_GROUP) {
		enabled = false
	}
}

application {
	mainClass = 'example.Main'
}

tasks.named('assemble').configure {
	dependsOn(tasks.named('installDist'))
}
